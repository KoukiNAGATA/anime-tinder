version: '3'
services:
  app:
    container_name: anime-front
    # 対話モード
    tty: true
    # Dockerfileの場所
    build:
        context: ./
        dockerfile: ./app/Dockerfile
    working_dir: /home
    # ホストOSとコンテナ内でソースコードを共有する
    # cachedで高速化
    volumes:
      - ./:/home:cached
    # コンテナ内部の3000を外部から3000でアクセスする
    ports:
      - 3000:3000
    environment:
      - HOST=0.0.0.0

  flask:
    build: .
    depends_on:
      - db
    ports:
      - 5000:5000
    volumes:
      - ./src:/src
    tty: true
    environment:
      TZ: Asia/Tokyo
      FLASK_APP: run.py
      FLASK_ENV: development
    command: flask run -h 0.0.0.0
    networks:
      app_net:
        ipv4_address: 172.30.0.3
  db:
    build: ./mysql/
    volumes:
      - ./mysql/sqls:/docker-entrypoint-initdb.d # 初期化時に実行するSQL
      - ./mysql/mysql_data:/var/lib/mysql # 永続化のためのボリュームマウント
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Asia/Tokyo
    networks:
      app_net:
        ipv4_address: 172.30.0.2
networks:
  app_net:
    name: app_net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24
