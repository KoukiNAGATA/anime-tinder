openapi: "3.0.2"
info:
  title: Anime Tinder
  description: サポーターズハッカソン用アニメレコメンドアプリのAPI仕様
  version: 1.0.0
servers:
  - url: http://localhost:5000/

tags:
  - name: user
    description: ユーザ関連API
  - name: app
    description: アプリ本体関連API

paths:
  /user/login:
    get:
      tags:
        - user
      summary: ログインAPI
      description:
        <b>「Twitterでログイン」ボタンをおした時の処理</b><br>
        サーバーがOAuth認証をする。成功した場合、返り値はなく、TwitterAPIの方で設定したcallback URLにリダイレクトされる。
      responses:
        200:
          description: A sucessful response.

  /user/logout:
    get:
      tags:
        - user
      summary: ログアウトAPI
      description:
        <b>「ログアウト」ボタンを押したときの処理</b><br>
        ログインAPIと同様。成功した場合、user/login/にリダイレクトさせるがこの処理はクライアント側で実装する。
      responses:
        200:
          description: A sucessful response.

  /user/callback:
    get:
      tags:
        - user
      summary: セッション保持API
      description:
        <b>ログイン時にセッションを保持</b><br>
        ログイン状態を確認して、ログインしていればユーザ―情報を取得する。サーバーサイドでsessionIDを発行して、これをクライアントに渡す。<br>
        sessionIDに加え、（アプリページに表示するため）Twitterアイコン、Twitterアカウント名も取得。
      responses:
        200:
          description: A sucessful response.
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  sessionId:
                    type: "string"
                    example: "hogefuga"
                  username:
                    type: "string"
                  profile_image_url:
                    type: "string"
  /user/recent:
    get:
      tags:
        - user
      summary: 最近の診断結果取得
      description:
        指定した数(num)だけその人の最近の診断結果(アニメ画像)を取ってくる
      parameters:
        - name: num
          in: query
          description: 表示数
          required: true
          schema:
            type: integer
        - name: sessionID
          in: header
          description: セッションID
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecentResults"

  /app/recs:
    get:
      tags:
        - app
      summary: アニメ情報取得API
      description:
        指定した数(num)だけカードに表示するアニメの情報を取ってくる。<br>
        DBにアクセスし、過去に表示したカード以外から適当に選んでくる。

      parameters:
        - name: num
          in: query
          description: 表示数
          required: true
          schema:
            type: integer
        - name: sessionID
          in: header
          description: セッションID
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnimeGetResponse"
  /app/rslts:
    post:
      tags:
        - app
      summary: オススメアニメ取得API
      description:
        LIKE/NOPE/SUPERLIKEの情報を渡すとオススメアニメの情報が返ってくる。<br>
        DBにアクセスし、過去のLIKE/NOPE/SUPERLIKE情報と今回の情報をもとにオススメアニメを1つ返す。
      parameters:
        - name: sessionID
          in: header
          description: セッションID
          required: true
          schema:
            type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimeLikeRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnimeGetResponse"

components:
  schemas:
    RecentResults:
      type: object
      properties:
        animeImages:
          type: array
          items:
            type: "string"
            description: 各アニメ画像
    AnimeGetResponse:
      type: object
      properties:
        animes:
          type: array
          items:
            $ref: "#/components/schemas/AnimeInfo"
          description: 各アニメ情報
    AnimeLikeRequest:
      type: object
      properties:
        animes:
          type: array
          items:
            $ref: "#/components/schemas/LikeInfo"
          description: LIKE/NOPE/SUPERLIKE情報
    AnimeInfo:
      type: object
      properties:
        id:
          type: string
          description: アニメid
        title:
          type: string
          description: アニメタイトル
        image:
          type: string
          description: アニメ画像
        description:
          type: string
          description: 概要
        year:
          type: string
          description: 放送時期(ex.2020年春)
        genre:
          type: array
          items:
            type: string
            description: ジャンル
        company:
          type: string
          description: 制作会社
    LikeInfo:
      type: object
      properties:
        animeId:
          type: string
          description: アニメid
        like:
          type: integer
          description: 0:NOPE,1:LIKE,2:SUPERLIKE


